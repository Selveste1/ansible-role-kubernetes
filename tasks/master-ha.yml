---

- name: get config files from primary master
  delegate_to: "{{ groups.k8s_masters[0] }}"
  slurp:
    src: "{{ item }}"
  with_items:
    - '{{ kubernetes_certs_dir }}/ca.crt'
    - '{{ kubernetes_certs_dir }}/ca.key'
    - '{{ kubernetes_certs_dir }}/sa.key'
    - '{{ kubernetes_certs_dir }}/sa.pub'
    - '{{ kubernetes_certs_dir }}/front-proxy-ca.crt'
    - '{{ kubernetes_certs_dir }}/front-proxy-ca.key'
    - '{{ kubernetes_config_dir }}/admin.conf'
  register: master_certs_configs_register

- name: copy config files to all masters
  copy:
    content: '{{ item.content | b64decode }}'
    dest: "{{ item.source }}"
  with_items: "{{ master_certs_configs_register.results }}"

- name: check master certs exists
  stat:
    path: "{{ item }}"
  register: master_certs_result
  with_items:
    - '{{ kubernetes_certs_dir }}/apiserver-kubelet-client.crt'
    - '{{ kubernetes_certs_dir }}/apiserver-kubelet-client.key'
    - '{{ kubernetes_certs_dir }}/apiserver.crt'
    - '{{ kubernetes_certs_dir }}/apiserver.key'
    - '{{ kubernetes_certs_dir }}/front-proxy-client.crt'
    - '{{ kubernetes_certs_dir }}/front-proxy-client.key'

- name: gen certs on master ha nodes
  command: kubeadm alpha phase certs all --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  when: (
    master_certs_result.results[0].stat.exists == False or
    master_certs_result.results[1].stat.exists == False or
    master_certs_result.results[2].stat.exists == False or
    master_certs_result.results[3].stat.exists == False or
    master_certs_result.results[4].stat.exists == False or
    master_certs_result.results[5].stat.exists == False )

- name: write kubelet config on master ha nodes
  command: kubeadm alpha phase kubelet config write-to-disk --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  changed_when: false

#- name: write kubelet env on master ha nodes
#  command: kubeadm alpha phase kubelet write-env-file --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
#  changed_when: false
- name: incluse bug work around
  include: master-ha-bug-workaround.yml

- name: write kubelet systemd file on master ha nodes
  command: kubeadm alpha phase kubeconfig kubelet --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  changed_when: false

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true

- name: check master admin conf exists
  stat:
    path: "{{ item }}"
  register: master_conf_result
  with_items:
    - '{{ kubernetes_config_dir }}/admin.conf'
    - '{{ kubernetes_config_dir }}/controller-manager.conf'
    - '{{ kubernetes_config_dir }}/kubelet.conf'
    - '{{ kubernetes_config_dir }}/scheduler.conf'

- name: write kubeconfig files for control-plane on master ha nodes
  command: kubeadm alpha phase kubeconfig all --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  when: (
    master_conf_result.results[0].stat.exists == False or
    master_conf_result.results[1].stat.exists == False or
    master_conf_result.results[2].stat.exists == False or
    master_conf_result.results[3].stat.exists == False )

- name: check master manifests exists
  stat:
    path: "{{ item }}"
  register: master_manifest_result
  with_items:
    - '{{ kubernetes_config_dir }}/manifests/kube-apiserver.yaml'
    - '{{ kubernetes_config_dir }}/manifests/kube-controller-manager.yaml'
    - '{{ kubernetes_config_dir }}/manifests/kube-scheduler.yaml'

- name: write controle-plane manifests on master ha nodes
  command: kubeadm alpha phase controlplane all --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  when: (
    master_manifest_result.results[0].stat.exists == False or
    master_manifest_result.results[1].stat.exists == False or
    master_manifest_result.results[2].stat.exists == False )

- name: annotate cri on master ha nodes
  command: kubeadm alpha phase kubelet config annotate-cri --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  changed_when: false

- name: mark as master on master ha nodes
  command: kubeadm alpha phase mark-master --config {{ kubernetes_config_dir }}/kubeadm/clusterconfig.yaml
  changed_when: false
