---

- name: get config files from primary master
  delegate_to: "{{ groups.k8s_masters[0] }}"
  slurp:
    src: "{{ item }}"
  with_items:
    - /etc/kubernetes/pki/ca.crt
    - /etc/kubernetes/pki/ca.key
    - /etc/kubernetes/pki/sa.key
    - /etc/kubernetes/pki/sa.pub
    - /etc/kubernetes/pki/front-proxy-ca.crt
    - /etc/kubernetes/pki/front-proxy-ca.key
    - /etc/kubernetes/admin.conf
  register: master_certs_configs_register

- name: copy config files to all masters
  copy:
    content: '{{ item.content | b64decode }}'
    dest: "{{ item.source }}"
  with_items: "{{ master_certs_configs_register.results }}"

- name: gen certs on master ha nodes
  shell: kubeadm alpha phase certs all --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

- name: write kubelet config on master ha nodes
  shell: kubeadm alpha phase kubelet config write-to-disk --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

#- name: write kubelet env on master ha nodes
#  shell: kubeadm alpha phase kubelet write-env-file --config /etc/kubernetes/kubeadm/kubeadmconf.yaml
- name: incluse bug work around
  include: master-ha-bug-workaround.yml

- name: write kubelet systemd file on master ha nodes
  shell: kubeadm alpha phase kubeconfig kubelet --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true

- name: write kubeconfig files for control-plane on master ha nodes
  shell: kubeadm alpha phase kubeconfig all --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

- name: write controle-plane manifests on master ha nodes
  shell: kubeadm alpha phase controlplane all --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

- name: annotate cri on master ha nodes
  shell: kubeadm alpha phase kubelet config annotate-cri --config /etc/kubernetes/kubeadm/kubeadmconf.yaml

- name: mark as master on master ha nodes
  shell: kubeadm alpha phase mark-master --config /etc/kubernetes/kubeadm/kubeadmconf.yaml
