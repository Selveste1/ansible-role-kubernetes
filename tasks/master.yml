---

- name: '{{ kubernetes_etcd_certs_dir }}'
  file:
    state: directory
    path: '{{ kubernetes_etcd_certs_dir }}'

- name: get {{ kubernetes_etcd_apiserver_client_key_file }} and {{ kubernetes_etcd_apiserver_client_key_file }} files from first etcd node
  delegate_to: "{{ groups.etcd[0] }}"
  slurp:
    src: "{{ item }}"
  with_items:
    - '{{ kubernetes_etcd_apiserver_client_cert_file }}'
    - '{{ kubernetes_etcd_apiserver_client_key_file }}'
  register: etcd_apiserver_certs_register

- name: copy etcd cert files to master nodes
  copy:
    content: '{{ item.content | b64decode }}'
    dest: "{{ item.source }}"
  with_items:
    - "{{ etcd_ca_certs_register.results }}"
    - "{{ etcd_apiserver_certs_register.results }}"

- name: run preflight checks
  command: kubeadm init phase preflight --config {{ kubernetes_kubeadm_config_file }}
  when:
  - inventory_hostname == groups.k8s_masters[0]
  - inventory_hostname not in groups.etcd
  register: master_preflight_register
  changed_when: false
  failed_when: false

- debug: var=master_preflight_register

- name: initial at first master
  command: "kubeadm init --config {{ kubernetes_kubeadm_config_file }}"
  when:
  - inventory_hostname == groups.k8s_masters[0]
  - inventory_hostname not in groups.etcd
  - master_preflight_register.rc == 0
  register: init_output

- name: run preflight checks
  command: kubeadm init phase preflight --config {{ kubernetes_kubeadm_config_file }} --ignore-preflight-errors=FileAvailable--etc-kubernetes-manifests-etcd.yaml,DirAvailable--var-etcd,Port-10250,Port-2379,Port-2380
  when:
  - inventory_hostname == groups.k8s_masters[0]
  - inventory_hostname in groups.etcd
  register: master_preflight_register
  changed_when: false
  failed_when: false

- debug: var=master_preflight_register

- name: initial at first master with started etcd
  command: "kubeadm init --config {{ kubernetes_kubeadm_config_file }} --ignore-preflight-errors=FileAvailable--etc-kubernetes-manifests-etcd.yaml,DirAvailable--var-etcd,Port-10250,Port-2379"
  when:
  - inventory_hostname == groups.k8s_masters[0]
  - inventory_hostname in groups.etcd
  - master_preflight_register.rc == 0
  register: init_output

- debug: var=init_output
  when: inventory_hostname == groups.k8s_masters[0]

- name: ensure .kube folder exists on first master
  file:
    path: /root/.kube
    state: directory
  when:
  - inventory_hostname == groups.k8s_masters[0]

- name: ensure kube config exists on first master
  copy:
    src: "{{ kubernetes_config_dir }}/admin.conf"
    dest: /root/.kube/config
    remote_src: yes
  when:
  - inventory_hostname == groups.k8s_masters[0]

- name: include master ha tasks
  include: master-ha.yml
  when: ( groups.k8s_masters | length > 1 ) and inventory_hostname != groups.k8s_masters[0]
