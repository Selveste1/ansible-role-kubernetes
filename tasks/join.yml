---

- name: check node is already in cluster
  delegate_to: "{{ groups.k8s_masters[0] }}"
  command: "kubectl get nodes -n kube-system --kubeconfig {{ kubernetes_config_dir }}/admin.conf -o name"
  register: get_node_register
  changed_when: false

- name: get join command from master
  delegate_to: "{{ groups.k8s_masters[0] }}"
  command: "kubeadm token create --print-join-command"
  changed_when: false
  when: ( 'node/' + ansible_nodename ) not in get_node_register.stdout_lines
  register: join_command_register

- name: ensure kubelet systemd service file exists
  template:
    src: origin_kubelet.service.d.j2
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  register: kubelet_config_file
  when:
    - ( 'node/' + ansible_nodename ) not in get_node_register.stdout_lines
    - inventory_hostname in groups.etcd

- name: Ensure kubelet is stopped and enabled at boot.
  service:
    name: kubelet
    state: stopped
    enabled: true
  when: ( 'node/' + ansible_nodename ) not in get_node_register.stdout_lines

- name: join node into cluster
  command: "{{ join_command_register.stdout }} --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests"
  when: ( 'node/' + ansible_nodename ) not in get_node_register.stdout_lines

# - name: check if taint is set
#   delegate_to: "{{ groups.k8s_masters[0] }}"
#   command: kubectl get node {{ ansible_nodename }} -o jsonpath='{.spec.taints}' --kubeconfig {{ kubernetes_config_dir }}/admin.conf
#   register: check_taint_register
#   changed_when: false
#   when: inventory_hostname in groups.etcd

# - name: taint etcd node
#   delegate_to: "{{ groups.k8s_masters[0] }}"
#   command: kubectl taint node {{ ansible_nodename }} node-role.kubernetes.io/etcd=:NoSchedule --kubeconfig {{ kubernetes_config_dir }}/admin.conf
#   when:
#   - inventory_hostname in groups.etcd
#   - "'node-role.kubernetes.io/etcd' not in check_taint_register.stdout"

- name: check if node role label is set
  delegate_to: "{{ groups.k8s_masters[0] }}"
  command: kubectl get node {{ ansible_nodename }} -o jsonpath='{.metadata.labels}' --kubeconfig {{ kubernetes_config_dir }}/admin.conf
  register: check_label_register
  changed_when: false
  when: inventory_hostname in groups.etcd

- name: label etcd node
  delegate_to: "{{ groups.k8s_masters[0] }}"
  command: kubectl label node {{ ansible_nodename }} node-role.kubernetes.io/etcd= --kubeconfig {{ kubernetes_config_dir }}/admin.conf
  when:
  - inventory_hostname in groups.etcd
  - "'node-role.kubernetes.io/etcd' not in check_label_register.stdout"
