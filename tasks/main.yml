---
- name: check if etcd on first master
  set_fact:
    all_etcd_on_master: true
  when: groups.etcd == groups.k8s_masters

- debug: var=all_etcd_on_master

- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - default.yml

- name: include Ubuntu prepare tasks
  import_tasks: prepare-ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- name: include CentOS prepare tasks
  import_tasks: prepare-centos.yml
  when: ansible_distribution == "CentOS"

- name: include install tasks
  import_tasks: install.yml

- name: '{{ kubernetes_kubeadm_config_file_path }}'
  file:
    state: directory
    path: '{{ kubernetes_kubeadm_config_file_path }}'

- name: '{{ kubernetes_kubeadm_config_file }}'
  template:
    src: clusterconfig.yaml.j2
    dest: '{{ kubernetes_kubeadm_config_file }}'

- name: ensure cloud provicer conf exists
  template:
    src: cloud.conf.j2
    dest: "{{ kubernetes_cloud_config_file }}"
  when: kubernetes_cloud_provider != ""

- name: ensure kubelet env KUBELET_EXTRA_ARGS is set
  lineinfile:
    path: '{{ kubernetes_kubelet_environment_file }}'
    regexp: '^KUBELET_EXTRA_ARGS.*'
    line: 'KUBELET_EXTRA_ARGS="--node-ip={{ ansible_host | default(ansible_default_ipv4.address) }}"'
  register: kubernetes_systemd_register

- debug: var=kubernetes_systemd_register

- name: Reload systemd unit if args were changed.
  systemd:
    daemon_reload: true
  when: kubernetes_systemd_register is changed

- name: include etcd tasks
  include_tasks: etcd.yml
  when:
  - inventory_hostname in groups.etcd
  - inventory_hostname not in groups.k8s_masters

- name: include master tasks
  include_tasks: master.yml
  when: inventory_hostname in groups.k8s_masters

- name: include network plugin tasks
  include_tasks: network_plugin.yml
  when: inventory_hostname == groups.k8s_masters[0]

- name: include join worker tasks
  include_tasks: join.yml

#- name: include update master tasks
#  include_tasks: update_master.yml
#  when: inventory_hostname in groups.k8s_masters
#  tags: k8s_update

- name: wait for cluster get ready
  pause:
    seconds: 60

- name: check cluster state
  command: kubectl get nodes -o wide
  register: cluster_state_register
  when: inventory_hostname == groups.k8s_masters[0]
  changed_when: false

- name: print cluster-state
  debug:
    var: "{{ item }}"
  with_items: "cluster_state_register.stdout_lines"
  when: inventory_hostname == groups.k8s_masters[0]
