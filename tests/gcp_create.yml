---
- name: create vms
  hosts: all
  gather_facts: no
  connection: local
  tasks:
    - name: create a disk
      gcp_compute_disk:
        name: "disk-instance-{{ inventory_hostname }}"
        size_gb: 20
        source_image: "{{ image }}"
        zone: "{{ gcp_zone }}"
        project: "{{ lookup('env','GCP_PROJECT_ID') }}"
        auth_kind: serviceaccount
        service_account_file: "./serviceaccount.json"
        state: present
      register: disk
    - name: create a network
      gcp_compute_network:
        name: "default"
        project: "{{ lookup('env','GCP_PROJECT_ID') }}"
        auth_kind: serviceaccount
        service_account_file: "./serviceaccount.json"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: network
    - name: create a address
      gcp_compute_address:
        name: "address-instance-{{ inventory_hostname }}"
        region: "{{ gcp_region }}"
        project: "{{ lookup('env','GCP_PROJECT_ID') }}"
        auth_kind: serviceaccount
        service_account_file: "./serviceaccount.json"
        state: present
      register: address
    - name: create a instance
      gcp_compute_instance:
        name: "{{ inventory_hostname }}"
        machine_type: "{{ type }}"
        disks:
          - auto_delete: "true"
            boot: "true"
            source: "{{ disk }}"
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: External NAT
                nat_ip: "{{ address }}"
                type: ONE_TO_ONE_NAT
        zone: "{{ gcp_zone }}"
        project: "{{ lookup('env','GCP_PROJECT_ID') }}"
        auth_kind: serviceaccount
        service_account_file: "./serviceaccount.json"
        state: present
    # - name: create instances
    #   delegate_to: localhost
    #   gce:
    #     instance_names: "{{ inventory_hostname }}"
    #     zone: "{{ gcp_zone }}"
    #     machine_type: "{{ type }}"
    #     image: "{{ image }}"
    #     state: present
    #     service_account_email: "{{ lookup('env','GCP_SA_EMAIL') }}"
    #     credentials_file: "./serviceaccount.json"
    #     service_account_permissions:
    #       - compute-rw
    #     project_id: "{{ lookup('env','GCP_PROJECT_ID') }}"
    #     disk_size: 10
    #   register: gce_info

    - name: set fact public_ip
      set_fact: public_ip={{ gce_info.networkInterfaces[0].accessConfigs[0].natIP }}

    - name: set fact private_ip
      set_fact: private_ip={{ gce_info.inetworkInterfaces[0].networkIP }}

    - name: set fact ansible_host
      set_fact: ansible_host={{ public_ip }}

    - name: set fact kubernetes_apiserver_ip
      set_fact: kubernetes_apiserver_ip={{ gce_info.networkInterfaces[0].accessConfigs[0].natIP }}
      when: groups.k8s_masters | length > 1 and inventory_hostname == groups.k8s_masters[0]

    - name: Wait for SSH to come up
      wait_for_connection:
