---

# Install vars
kubernetes_packages:
  - name: kubelet
    state: present
  - name: kubectl
    state: present
  - name: kubeadm
    state: present
  - name: kubernetes-cni
    state: present

kubernetes_version: '1.14'
kubernetes_version_rhel_package: '1.14.0'
kubernetes_yum_arch: x86_64
kubernetes_apt_repo_url: http://apt.kubernetes.io/
kubernetes_apt_repo_pool: kubernetes-xenial

#kubeadm ClusterConfiguration vars
kubernetes_imageRepository: "k8s.gcr.io"
kubernetes_useHyperKubeImage: "false"
kubernetes_dns_type: "CoreDNS"
kubernetes_master_version: "v1.14.0"
kubernetes_config_dir: /etc/kubernetes
kubernetes_certs_dir: "{{ kubernetes_config_dir }}/pki"
kubernetes_pod_manifest_path: '{{ kubernetes_config_dir }}/manifests'
kubernetes_cluster_name: "kubernetes"
kubernetes_log_dir: "/var/log/kubernetes"
kubernetes_audit_log_dir: "{{ kubernetes_log_dir }}/audit"
kubernetes_log_age: 2
kubernetes_etcd_data_dir: "/var/etcd"
kubernetes_authorization_mode: "Node,RBAC"
kubernetes_enable_admission_plugins: "Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
kubernetes_dns_domain: "cluster.local"
kubernetes_pod_subnet: "10.244.0.0/16"
kubernetes_service_subnet: "10.96.0.0/16"

# Kubelet vars
kubernetes_kubelet_extra_args: ""

# kubeadm vars
kubernetes_enable_web_ui: true
kubernetes_version_kubeadm: 'stable-{{ kubernetes_version }}'

# Etcd vars
kubernetes_etcd_certs_dir: '{{ kubernetes_certs_dir }}/etcd'
kubernetes_etcd_ca_cert_file: '{{ kubernetes_etcd_certs_dir }}/ca.crt'
kubernetes_etcd_ca_key_file: '{{ kubernetes_etcd_certs_dir }}/ca.key'
kubernetes_etcd_server_cert_file: '{{ kubernetes_etcd_certs_dir }}/server.crt'
kubernetes_etcd_server_key_file: '{{ kubernetes_etcd_certs_dir }}/server.key'
kubernetes_etcd_peer_cert_file: '{{ kubernetes_etcd_certs_dir }}/peer.crt'
kubernetes_etcd_peer_key_file: '{{ kubernetes_etcd_certs_dir }}/peer.key'
kubernetes_etcd_healthcheck_client_cert_file: '{{ kubernetes_etcd_certs_dir }}/healthcheck-client.crt'
kubernetes_etcd_healthcheck_client_key_file: '{{ kubernetes_etcd_certs_dir }}/healthcheck-client.key'
kubernetes_etcd_apiserver_client_cert_file: '{{ kubernetes_certs_dir }}/apiserver-etcd-client.crt'
kubernetes_etcd_apiserver_client_key_file: '{{ kubernetes_certs_dir }}/apiserver-etcd-client.key'
kubernetes_etcd_manifest_file: '{{ kubernetes_pod_manifest_path }}/etcd.yaml'
kubernetes_etcd_name: '{{ ansible_hostname }}'
kubernetes_etcd_server_cert_sans:
- "{{ ansible_hostname }}"
- "{{ ansible_nodename }}"
- "{{ ansible_host }}"
kubernetes_etcd_peer_cert_sans:
- "{{ ansible_hostname }}"
- "{{ ansible_nodename }}"
- "{{ ansible_host }}"
kubernetes_etcd_server_port: 2380
kubernetes_etcd_client_port: 2379
kubernetes_etcd_advertise_client_urls: 'https://{{ ansible_host }}:{{ kubernetes_etcd_client_port }}'
kubernetes_etcd_initial_cluster: |
  {% set res = [] %}
  {%- for n in groups.etcd %}
  {% set ignored = res.extend([hostvars[n]['ansible_hostname'] ~ "=https://" ~ hostvars[n]['ansible_host'] ~ ":" ~ kubernetes_etcd_server_port]) %}
  {% endfor %}
  {{ res }}
kubernetes_etcd_initial_advertise_peer_urls: 'https://{{ ansible_host }}:{{ kubernetes_etcd_server_port }}'
kubernetes_etcd_listen_peer_urls: 'https://{{ ansible_host }}:{{ kubernetes_etcd_server_port }}'
kubernetes_etcd_listen_client_urls: 'https://{{ ansible_host }}:{{ kubernetes_etcd_client_port }}'

# API server
kubernetes_apiserver_dns: ""
kubernetes_apiserver_port: 6443
kubernetes_apiserver_manifest_file: '{{ kubernetes_pod_manifest_path }}/kube-apiserver.yaml'

# Controller Manager
kubernetes_controller_manager_manifest_file: '{{ kubernetes_pod_manifest_path }}/kube-controller-manager.yaml'

# Scheduler
kubernetes_scheduler_manifest_file: '{{ kubernetes_pod_manifest_path }}/kube-scheduler.yaml'

# kubeadm
kubernetes_kubeadm_config_file_path: '{{ kubernetes_config_dir }}/kubeadm'
kubernetes_kubeadm_config_file_name: clusterconfig.yaml
kubernetes_kubeadm_config_file: '{{ kubernetes_kubeadm_config_file_path }}/{{ kubernetes_kubeadm_config_file_name }}'

# cloud provider vars
kubernetes_cloud_provider: ""
kubernetes_cloud_config_file: "{{ kubernetes_config_dir }}/{{ kubernetes_cloud_provider }}.conf"
kubernetes_cloud_vsphere_workspace_server: ""
kubernetes_cloud_vsphere_workspace_datacenter: ""
kubernetes_cloud_vsphere_workspace_default_datastore: ""
kubernetes_cloud_vsphere_workspace_folder: ""
kubernetes_cloud_vsphere_default_user: ""
kubernetes_cloud_vsphere_default_password: ""
kubernetes_cloud_vsphere_datacenters: []
kubernetes_cloud_vsphere_network_options: []
kubernetes_cloud_vsphere_disk_options: []

#not use, changed in tasks
all_etcd_on_master: false
