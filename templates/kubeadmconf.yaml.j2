apiVersion: "kubeadm.k8s.io/v1alpha3"
kind: ClusterConfiguration
imageRepository: k8s.gcr.io
kubernetesVersion: v1.12.0
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
auditPolicy:
  logDir: /var/log/kubernetes/audit
  logMaxAge: 2
  path: ""
{% if kubernetes_etcd %}
etcd:
  local:
    dataDir: /var/etcd
    image: ""
    serverCertSANs:
    - "{{ ansible_hostname }}"
    - "{{ ansible_ssh_host }}"
    peerCertSANs:
    - "{{ ansible_hostname }}"
    - "{{ ansible_ssh_host }}"
    extraArgs:
      initial-cluster: {% for n in groups.etcd %}{{ hostvars[n]['ansible_hostname'] }}=https://{{ hostvars[n]['ansible_ssh_host'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}

      initial-cluster-state: new
      name: {{ ansible_hostname }}
      listen-peer-urls: https://{{ ansible_ssh_host }}:2380
      listen-client-urls: https://{{ ansible_ssh_host }}:2379
      advertise-client-urls: https://{{ ansible_ssh_host }}:2379
      initial-advertise-peer-urls: https://{{ ansible_ssh_host }}:2380
{% else %}
etcd:
  endpoints:
  {%- for n in groups.etcd %}
    - "https://{{ hostvars[n]['ansible_ssh_host'] }}:2379"
  {%- endfor %}]
  caFile: /etc/kubernetes/pki/etcd/ca.crt
  certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
  keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
{% endif %}
{% if kubernetes_master %}
apiServerCertSANs:
- "{{ kubernetes_apiserver_ip}}"
  {%- if kubernetes_apiserver_dns != "" %}
- "{{ kubernetes_apiserver_dns }}"
controlPlaneEndpoint: "{{ kubernetes_apiserver_dns}}:{{ kubernetes_apiserver_port}}"
  {%- else %}

controlPlaneEndpoint: "{{ kubernetes_apiserver_ip}}:{{ kubernetes_apiserver_port}}"
  {%- endif %}

apiServerExtraArgs:
  authorization-mode: Node,RBAC
  enable-admission-plugins: Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
networking:
  dnsDomain: cluster.local
  podSubnet: ""
  serviceSubnet: 10.96.0.0/12
{% endif %}
