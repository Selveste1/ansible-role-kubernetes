apiVersion: "kubeadm.k8s.io/v1alpha3"
kind: ClusterConfiguration
imageRepository: {{ kubernetes_imageRepository }}
kubernetesVersion: {{ kubernetes_master_version }}
certificatesDir: {{ kubernetes_certs_dir }}
clusterName: {{ kubernetes_cluster_name }}
auditPolicy:
  logDir: {{ kubernetes_log_dir }}
  logMaxAge: {{ kubernetes_log_age }}
  path: ""
etcd:
{% if inventory_hostname in groups.etcd %}
  local:
    dataDir: {{ kubernetes_etcd_data_dir }}
    image: {{ kubernetes_etcd_image }}
    serverCertSANs:
{% for san in kubernetes_etcd_server_cert_sans %}
    - {{ san }}
{% endfor %}
    peerCertSANs:
{% for san in kubernetes_etcd_peer_cert_sans %}
    - {{ san }}
{% endfor %}
    extraArgs:
      initial-cluster: {{ kubernetes_etcd_initial_cluster | join(",") }}
      initial-cluster-state: new
      name: {{ kubernetes_etcd_name }}
      listen-peer-urls: {{ kubernetes_etcd_listen_peer_urls }}
      listen-client-urls: {{ kubernetes_etcd_listen_client_urls }}
      advertise-client-urls: {{ kubernetes_etcd_advertise_client_urls }}
      initial-advertise-peer-urls: {{ kubernetes_etcd_initial_advertise_peer_urls }}
{% else %}
  external:
    endpoints:
{% for n in groups.etcd %}
    - "https://{{ hostvars[n]['ansible_host'] | default(hostvars[n]['ansible_default_ipv4.address']) }}:{{ kubernetes_etcd_client_port }}"
{% endfor %}
    caFile: {{ kubernetes_etcd_ca_cert_file }}
    certFile: {{ kubernetes_etcd_apiserver_client_cert_file }}
    keyFile: {{ kubernetes_etcd_apiserver_client_key_file }}
{% endif %}
{% if inventory_hostname in groups.k8s_masters %}
apiServerCertSANs:
- "{{ kubernetes_apiserver_ip | default(hostvars[groups.k8s_masters[0]]['ansible_host']) | default(hostvars[groups.k8s_masters[0]]['ansible_default_ipv4.address']) }}"
  {%- if kubernetes_apiserver_dns != "" %}
- "{{ kubernetes_apiserver_dns }}"
controlPlaneEndpoint: "{{ kubernetes_apiserver_dns }}:{{ kubernetes_apiserver_port}}"
  {%- else %}

controlPlaneEndpoint: "{{ kubernetes_apiserver_ip | default(hostvars[groups.k8s_masters[0]]['ansible_host'])| default(hostvars[groups.k8s_masters[0]]['ansible_default_ipv4.address']) }}:{{ kubernetes_apiserver_port}}"
  {%- endif %}

apiServerExtraArgs:
  authorization-mode: {{ kubernetes_authorization_mode }}
  enable-admission-plugins: {{ kubernetes_enable_admission_plugins }}
{% if kubernetes_cloud_provider != "" %}
  cloud-provider: "{{ kubernetes_cloud_provider }}"
  cloud-config: "{{ kubernetes_cloud_config_file }}"
apiServerExtraVolumes:
- name: cloud
  hostPath: "{{ kubernetes_cloud_config_file }}"
  mountPath: "{{ kubernetes_cloud_config_file }}"
controllerManagerExtraArgs:
  cloud-provider: "{{ kubernetes_cloud_provider }}"
  cloud-config: "{{ kubernetes_cloud_config_file }}"
controllerManagerExtraVolumes:
- name: cloud
  hostPath: "{{ kubernetes_cloud_config_file }}"
  mountPath: "{{ kubernetes_cloud_config_file }}"
{%- endif %}

networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}

{% endif %}

{% if kubernetes_cloud_provider != "" %}
---

apiVersion: kubeadm.k8s.io/v1alpha3
kind: InitConfiguration
nodeRegistration:
  kubeletExtraArgs:
    cloud-provider: "{{ kubernetes_cloud_provider }}"
    cloud-config: "{{ kubernetes_cloud_config_file }}"
{% endif %}
